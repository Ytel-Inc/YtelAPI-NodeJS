/**
 * YtelAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

'use strict';

const BaseModel = require('./BaseModel');

/**
 * Creates an instance of Body21
 */
class Body21 extends BaseModel {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.to = this.constructor.getValue(obj.to || obj.To);
        this.type = this.constructor.getValue(obj.type || obj.Type);
        this.subject = this.constructor.getValue(obj.subject || obj.Subject);
        this.message = this.constructor.getValue(obj.message || obj.Message);
        this.from = this.constructor.getValue(obj.from || obj.From);
        this.cc = this.constructor.getValue(obj.cc || obj.Cc);
        this.bcc = this.constructor.getValue(obj.bcc || obj.Bcc);
        this.attachment = this.constructor.getValue(obj.attachment || obj.Attachment);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'to', realName: 'To' },
            { name: 'type', realName: 'Type' },
            { name: 'subject', realName: 'Subject' },
            { name: 'message', realName: 'Message' },
            { name: 'from', realName: 'From' },
            { name: 'cc', realName: 'Cc' },
            { name: 'bcc', realName: 'Bcc' },
            { name: 'attachment', realName: 'Attachment' },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {};
    }
}

module.exports = Body21;
